// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "esp-dht22",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "description": "Returns the latest data from the DHT sensor",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SensorData"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/config": {
      "get": {
        "description": "Sets the SSID and password of a network",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "ssid",
          "in": "query",
          "required": true
        },
        {
          "type": "string",
          "name": "password",
          "in": "query"
        }
      ]
    }
  },
  "definitions": {
    "ConfigResponse": {
      "type": "object",
      "required": [
        "ssid"
      ],
      "properties": {
        "ssid": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "SensorData": {
      "type": "object",
      "required": [
        "device",
        "stale",
        "deltaTime",
        "dht22"
      ],
      "properties": {
        "deltaTime": {
          "type": "integer"
        },
        "device": {
          "type": "string"
        },
        "dht22": {
          "type": "object",
          "required": [
            "temperature",
            "humidity",
            "heatIndex"
          ],
          "properties": {
            "heatIndex": {
              "type": "number"
            },
            "humidity": {
              "type": "number"
            },
            "temperature": {
              "type": "number"
            }
          }
        },
        "stale": {
          "type": "integer"
        }
      }
    }
  }
}`))
}
