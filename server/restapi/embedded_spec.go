// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Jupiter",
    "version": "0.1.0"
  },
  "paths": {
    "/sensors": {
      "get": {
        "description": "Returns the list of sensors",
        "operationId": "getSensorsList",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SensorList"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/sensors/{sensorId}": {
      "get": {
        "description": "Returns the data of a particular sensor",
        "operationId": "getSensorData",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SensorResponse"
            }
          },
          "404": {
            "description": "Sensor not found."
          },
          "504": {
            "description": "Sensor is not available."
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "sensorId",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "ErrorObject": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorObject"
          }
        }
      }
    },
    "GenericLinks": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "type": "string"
        }
      }
    },
    "SensorCard": {
      "type": "object",
      "required": [
        "id",
        "name",
        "links"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/GenericLinks"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SensorData": {
      "type": "object",
      "required": [
        "id",
        "name",
        "temperature",
        "humidity",
        "timestamp",
        "deltaTime",
        "stale"
      ],
      "properties": {
        "deltaTime": {
          "type": "integer"
        },
        "heatIndex": {
          "type": "number"
        },
        "humidity": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stale": {
          "type": "boolean"
        },
        "temperature": {
          "type": "number"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SensorList": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SensorCard"
          }
        },
        "links": {
          "$ref": "#/definitions/GenericLinks"
        }
      }
    },
    "SensorResponse": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SensorData"
        },
        "links": {
          "$ref": "#/definitions/GenericLinks"
        }
      }
    }
  }
}`))
}
