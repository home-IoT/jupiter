// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/home-IoT/jupiter/server/models"
)

// GetSensorsListOKCode is the HTTP code returned for type GetSensorsListOK
const GetSensorsListOKCode int = 200

/*GetSensorsListOK Success

swagger:response getSensorsListOK
*/
type GetSensorsListOK struct {

	/*
	  In: Body
	*/
	Payload *models.SensorList `json:"body,omitempty"`
}

// NewGetSensorsListOK creates GetSensorsListOK with default headers values
func NewGetSensorsListOK() *GetSensorsListOK {
	return &GetSensorsListOK{}
}

// WithPayload adds the payload to the get sensors list o k response
func (o *GetSensorsListOK) WithPayload(payload *models.SensorList) *GetSensorsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sensors list o k response
func (o *GetSensorsListOK) SetPayload(payload *models.SensorList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSensorsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSensorsListDefault Error

swagger:response getSensorsListDefault
*/
type GetSensorsListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetSensorsListDefault creates GetSensorsListDefault with default headers values
func NewGetSensorsListDefault(code int) *GetSensorsListDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSensorsListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get sensors list default response
func (o *GetSensorsListDefault) WithStatusCode(code int) *GetSensorsListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get sensors list default response
func (o *GetSensorsListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get sensors list default response
func (o *GetSensorsListDefault) WithPayload(payload *models.ErrorResponse) *GetSensorsListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sensors list default response
func (o *GetSensorsListDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSensorsListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
